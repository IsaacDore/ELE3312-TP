


ARM Macro Assembler    Page 1 


    1 00000000                 PRESERVE8
    2 00000000                 AREA             |.text|, CODE, READONLY
    3 00000000         
    4 00000000         
    5 00000000                 EXPORT           asm_update_myball_array
    6 00000000                 IMPORT           update_rand
    7 00000000                 IMPORT           myball_array
    8 00000000         
    9 00000000         
   10 00000000         asm_update_myball_array
                               PROC
   11 00000000         
   12 00000000         
   13 00000000 B530            PUSH             {r4-r5,lr}
   14 00000002         ; r4 = i
   15 00000002         ; r5 = adresse de myball_array[i]
   16 00000002 F04F 0400       MOV              r4,#0       ; r4=i
   17 00000006 4D2B            LDR              r5,=myball_array 
                                                            ; r5=&myball_array
   18 00000008 E050            B                TEST_LOOP
   19 0000000A         
   20 0000000A         LAB1                                 ; loop 1
   21 0000000A F9B5 100C       LDRSH            r1,[r5,#12] ; r1 = radius 
   22 0000000E 3101            ADDS             r1,#1       ; r1 += 1
   23 00000010 D132            BNE              LAB2        ; if(r1!=0){ goto l
                                                            ab2 }
   24 00000012         ; only if x was -1
   25 00000012 F44F 70A0       MOV              r0,#320     ; r0 = 320
   26 00000016 F7FF FFFE       BL               update_rand ; update rand(320)
   27 0000001A 8128            STRH             r0,[r5, #8] ; x=rand
   28 0000001C F04F 00F0       MOV              r0,#240     ; r0=240
   29 00000020 F7FF FFFE       BL               update_rand ; update rand(240)
   30 00000024 8028            STRH             r0,[r5]     ; y= rand
   31 00000026 F04F 000A       MOV              r0,#10      ; r0=10
   32 0000002A F7FF FFFE       BL               update_rand ; update_rand(10)
   33 0000002E 60E8            STR              r0,[r5,#12] ; radius=rand
   34 00000030 2007            MOVS             r0,#7       ; r0 = 7
   35 00000032 F7FF FFFE       BL               update_rand ; update rand(7)
   36 00000036 3001            ADDS             r0,#1       ; r0 +=1
   37 00000038 2800            CMP              r0,#0       ; if r0=0 TODO: can
                                                             be removed maybe
   38 0000003A BF08 2100       MOVEQ            r1,#0x0000  ;black   
   39 0000003E 2801            CMP              r0,#1
   40 00000040 BF08 211F       MOVEQ            r1,#0x001F  ;blue
   41 00000044 2802            CMP              r0,#2
   42 00000046 BF08 F44F 
              4178             MOVEQ            r1,#0xF800  ;red
   43 0000004C 2803            CMP              r0,#3
   44 0000004E BF08 F44F 
              61FC             MOVEQ            r1,#0x07E0  ;green
   45 00000054 2804            CMP              r0,#4
   46 00000056 BF08 F240 
              71FF             MOVEQ            r1,#0x07FF  ;cyan
   47 0000005C 2805            CMP              r0,#5
   48 0000005E BF08 F64F 
              011F             MOVEQ            r1,#0xF81F  ;magenta
   49 00000064 2806            CMP              r0,#6
   50 00000066 BF08 F64F 
              71E0             MOVEQ            r1,#0xFFE0  ;yellow



ARM Macro Assembler    Page 2 


   51 0000006C 2807            CMP              r0,#7
   52 0000006E BF08 F64F 
              71FF             MOVEQ            r1,#0xFFFF  ;whilte
   53 00000074 6069            STR              r1,[r5,#4]  ; color = r1  
   54 00000076 E017            B                END_LOOP
   55 00000078         
   56 00000078         LAB2                                 ; if initialized
   57 00000078 68E9            LDR              r1,[r5,#12] ; r1 = radius
   58 0000007A 3103            ADDS             r1,#3       ; r1 += 3
   59 0000007C 60E9            STR              r1,[r5,#12] ; radius = radius +
                                                             3
   60 0000007E 2928            CMP              r1, #40
   61 00000080 DA0F            BGE              CLEAR_BALL
   62 00000082 F9B5 2008       LDRSH            r2,[r5,#8]  ; r2 = x
   63 00000086 4291            CMP              r1,r2
   64 00000088 DA0B            BGE              CLEAR_BALL  ; if radius >= x cl
                                                            ear
   65 0000008A F9B5 3000       LDRSH            r3,[r5]     ; r3 = y
   66 0000008E 4299            CMP              r1,r3
   67 00000090 DA07            BGE              CLEAR_BALL  ; if radius >= y cl
                                                            ear
   68 00000092 F5C2 72A0       RSB              r2,r2,#320  ; r2 = 320 - x
   69 00000096 4291            CMP              r1,r2
   70 00000098 DA03            BGE              CLEAR_BALL
   71 0000009A F1C3 03F0       RSB              r3,r3,#240
   72 0000009E 4299            CMP              r1,r3
   73 000000A0 DB02            BLT              END_LOOP
   74 000000A2         
   75 000000A2         CLEAR_BALL
   76 000000A2 F04F 31FF       MOV              r1,#0xFFFFFFFF
   77 000000A6 60E9            STR              r1,[r5,#12] ; radius = -1
   78 000000A8         
   79 000000A8         END_LOOP
   80 000000A8 3401            ADDS             r4,#1       ; i+=1
   81 000000AA 3510            ADDS             r5,#16      ; addr += 16
   82 000000AC         
   83 000000AC 2C03    TEST_LOOP
                               CMP              r4,#3       ; end loop 1
   84 000000AE DBAC            BLT              LAB1
   85 000000B0 BD30            POP              {r4-r5,pc}
   86 000000B2                 ENDP
   87 000000B2                 END
              00 00 00000000 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=fd_stm32\asm_update_my_ball_array.d -ofd_stm32\asm_update_my_ball_arra
y.o -I.\RTE\_FD_STM32 -IC:\Users\isaac\AppData\Local\Arm\Packs\ARM\CMSIS\6.1.0\
CMSIS\Core\Include -IC:\Users\isaac\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\
2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 540" --predefine="STM32F446xx SETA 1" --prede
fine="_RTE_ SETA 1" --list=asm_update_my_ball_array.lst ..\Core\Src\asm_update_
my_ball_array.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 2 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      None
Comment: .text unused
CLEAR_BALL 000000A2

Symbol: CLEAR_BALL
   Definitions
      At line 75 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 61 in file ..\Core\Src\asm_update_my_ball_array.asm
      At line 64 in file ..\Core\Src\asm_update_my_ball_array.asm
      At line 67 in file ..\Core\Src\asm_update_my_ball_array.asm
      At line 70 in file ..\Core\Src\asm_update_my_ball_array.asm

END_LOOP 000000A8

Symbol: END_LOOP
   Definitions
      At line 79 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 54 in file ..\Core\Src\asm_update_my_ball_array.asm
      At line 73 in file ..\Core\Src\asm_update_my_ball_array.asm

LAB1 0000000A

Symbol: LAB1
   Definitions
      At line 20 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 84 in file ..\Core\Src\asm_update_my_ball_array.asm
Comment: LAB1 used once
LAB2 00000078

Symbol: LAB2
   Definitions
      At line 56 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 23 in file ..\Core\Src\asm_update_my_ball_array.asm
Comment: LAB2 used once
TEST_LOOP 000000AC

Symbol: TEST_LOOP
   Definitions
      At line 83 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 18 in file ..\Core\Src\asm_update_my_ball_array.asm
Comment: TEST_LOOP used once
asm_update_myball_array 00000000

Symbol: asm_update_myball_array
   Definitions
      At line 10 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 5 in file ..\Core\Src\asm_update_my_ball_array.asm



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: asm_update_myball_array used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

myball_array 00000000

Symbol: myball_array
   Definitions
      At line 7 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 17 in file ..\Core\Src\asm_update_my_ball_array.asm
Comment: myball_array used once
update_rand 00000000

Symbol: update_rand
   Definitions
      At line 6 in file ..\Core\Src\asm_update_my_ball_array.asm
   Uses
      At line 26 in file ..\Core\Src\asm_update_my_ball_array.asm
      At line 29 in file ..\Core\Src\asm_update_my_ball_array.asm
      At line 32 in file ..\Core\Src\asm_update_my_ball_array.asm
      At line 35 in file ..\Core\Src\asm_update_my_ball_array.asm

2 symbols
346 symbols in table
